@startuml
'skinparam handwritten true
hide circle

skinparam class {
	'BackgroundColor Lavender
	BackgroundColor #GreenYellow/LightGoldenRodYellow
    BorderColor Black
    ArrowColor  Black
}

rectangle UserResort {

class Person{
    name
    adresse
    email
    phoneNr
}


class Customer{
    preferences
    discount
    id
    getCatalog()
    setDiscount()
    getDiscount()
}

class Manager{
    resetLogin()
    addLogin()
    orderProducts()
}


Person ^-- Customer


Staff ^-- Manager
Staff ^-- SalesStaff

Customer ^-- NormalCustomer
Customer ^-- HouseCustomer
Customer ^-- MajorCustomer
Customer ^-- Staff


class Staff{
    '== attributes =='
    username
    password

    '=== methods ===='
    login()
}

Manager -- Calendar

}









class Calendar{
    addAppointment()
    editAppointment()
    deleteAppointment()
}







rectangle ProductResort{
    class Product{
        '== attributes =='
        description
        bnnInfo
        ean
        quantityStored
        quantityDisplayed
        price

        getPrice()
        getProductInfo()

    }

    class ProductList{
        profitValue

        setProfitValue()
        getProfitValue()
        getValueOfStoredProducts()
    }

    class Inventory {

    }

    class OrderableProducts{

    }

    class LabelGenerator{
        printLabelAll()
        printLabelProduct()
        generateBarCode()
    }

    class Distributor{
        '== attributes =='
        companyname
        address
        contactPartner
        minimumOrderQuantity
        paymentMethods
        taxNumber
    }

    OrderableProducts -- Distributor

    class OrderAssistant{
        getLowestPriceForProduct()
        order()
    }

    OrderAssistant -- Manager
    OrderAssistant -- OrderableProducts


    ProductList -- Product
    Product -- LabelGenerator
    ProductList ^-- OrderableProducts
    ProductList ^-- Inventory
    Product -- Distributor


}

rectangle DataResort {

    class Statistic{
        sales
        purchases
        time
        soldWares
        purchasedWares
        stolenProducts

        getStatics()
    }

    class Log{
        getSales()
        getPurchases()
        getTime()
        getSoldWares()
        getPurchasedWares()
        getCustomerPreferences()
        getStolenProducts()
    }

    Log -right- Statistic


    Log -right- Customer

    Log -- Product

}

rectangle CashierResort {
    class CashRegister{
        calculatePrice()
        giveChange()
        cancelAll()
        cancelProduct()
        enterCustomerId()

    }



    class ShoppingCart{
        addProduct()
    }
    Log -- CashRegister

    CashRegister -down- ShoppingCart
    ShoppingCart -- Product


}
@enduml