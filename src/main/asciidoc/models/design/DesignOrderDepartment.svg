<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns="http://www.w3.org/2000/svg" contentScriptType="application/ecmascript" contentStyleType="text/css"
     height="359px" preserveAspectRatio="none" style="width:275px;height:359px;background:#000000;" version="1.1"
     viewBox="0 0 275 359" width="275px" zoomAndPan="magnify">
    <defs/>
    <g>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="140" x="5" y="19.5332">Dot Executable: null
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="173" x="5" y="37.1426">No dot executable found
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="258" x="5" y="54.752">Cannot find Graphviz. You should try
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="0" x="9" y="72.3613"/>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="71" x="5" y="89.9707">@startuml
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="50" x="5" y="107.5801">testdot
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="66" x="5" y="125.1895">@enduml
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="0" x="9" y="142.7988"/>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="15" x="9" y="160.4082">or
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="0" x="9" y="178.0176"/>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="201" x="5" y="195.627">java -jar plantuml.jar -testdot
        </text>
        <text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="0" x="9" y="213.2363"/>
        <rect fill="#DDDDDD" height="119.6563" rx="5" ry="5" style="stroke: #000000; stroke-width: 1.0;" width="194"
              x="36.5" y="229.3125"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="85" x="46.5" y="250.8457">Background
        </text>
        <text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs"
              textLength="81" x="139.5" y="250.8457">Component
        </text>
        <rect fill="#3DD13F" height="17.6094" style="stroke: none; stroke-width: 1.0;" width="93" x="42.5"
              y="253.9219"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0"
              x="62.5" y="268.4551"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="29"
              x="139.5" y="268.4551">View
        </text>
        <rect fill="#5F9AEA" height="17.6094" style="stroke: none; stroke-width: 1.0;" width="93" x="42.5"
              y="271.5313"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0"
              x="62.5" y="286.0645"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="62"
              x="139.5" y="286.0645">Controller
        </text>
        <rect fill="#CEF6CE" height="17.6094" style="stroke: none; stroke-width: 1.0;" width="93" x="42.5"
              y="289.1406"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0"
              x="62.5" y="303.6738"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="41"
              x="139.5" y="303.6738">Spring
        </text>
        <rect fill="#F5A9BC" height="17.6094" style="stroke: none; stroke-width: 1.0;" width="93" x="42.5" y="306.75"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0"
              x="62.5" y="321.2832"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="66"
              x="139.5" y="321.2832">Salespoint
        </text>
        <rect fill="#F9ED93" height="17.6094" style="stroke: none; stroke-width: 1.0;" width="93" x="42.5"
              y="324.3594"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0"
              x="62.5" y="338.8926"/>
        <text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="29"
              x="139.5" y="338.8926">Java
        </text>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="236.3125" y2="236.3125"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="253.9219" y2="253.9219"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="271.5313" y2="271.5313"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="289.1406" y2="289.1406"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="306.75" y2="306.75"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="324.3594" y2="324.3594"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="224.5" y1="341.9688" y2="341.9688"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="42.5" x2="42.5" y1="236.3125" y2="341.9688"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="135.5" x2="135.5" y1="236.3125" y2="341.9688"/>
        <line style="stroke: #000000; stroke-width: 1.0;" x1="224.5" x2="224.5" y1="236.3125" y2="341.9688"/><!--
@startuml




skinparam class {
	BackgroundColor #Silver/white
	BackgroundColor<<Spring>> #a9f5e1/cef6ce
	BackgroundColor<<Salespoint>> #f5a9bc/fcc4f0
	BackgroundColor<<Java>> #f9ed93/f7f583
	BackgroundColor<<Controller>> #Cornflowerblue/Cyan
    BorderColor Black
    ArrowColor  Black
}

skinparam package {
    FontColor Grey
    BorderColor Darkgrey
}

skinparam classAttributeIconSize 0
skinparam linetype ortho

legend
| Background | Component |
|<#3dd13f>     | View |
|<#5f9aea>     | Controller |
|<#cef6ce>     | Spring |
|<#f5a9bc>     | Salespoint |
|<#f9ed93>     | Java |
endlegend


rectangle spring-data-comments-2.1.0.RELEASE.jar as spring {

    namespace org.springframework.data.repository {
        interface CrudRepository <T, ID> <<Spring>>{
            <S extends T> +save(S) : S
            <S extends T> +saveAll(Iterable<Sâ€‹>) : Iterable<S>
            +findById(ID) : Optional<T>
            +existsById(ID) : boolean
            +findAll() : Iterable<T>
            +findAllById(Iterable<ID>) : Iterable<T>
            +count() : long
            +deleteById(ID) : void
            +delete(T) : void
            +deleteAll(Iterable<? extends T>) : void
            +deleteAll() : void
        }
    }
}

rectangle salespoint-framework-7.0.0.RELEASE.jar {
    namespace org.salespointframework.order {
        interface OrderManager <T extends Order> <<Salespoint>>{
            +cancelOrder(T) : boolean
            +completeOrder(T) : void
            +contains(OrderIdentifier) : boolean
            +findBy(OrderStatus) : Streamable<T>
            +get(OrderIdentifier) : Optional<T>
            +save(T) : T
        }

        class Order <<Salespoint>>{
            -orderIdentifier : OrderIdentifier
            -paymentMethod : PaymentMethod
            -userAccount : UserAccount
            -dateCreated : LocalDateTime
            -orderStatus : OrderStatus
            -orderLines : Set<OrderLine>
            -chargeLines : Set<ChargeLines>

            +Order(UserAccount)
            +add(ChargeLine) : void
            +remove(ChargeLine) : void
            +getChargeLines() : Streamable<ChargeLine>
            +getChargeLinesPrice() : MonetaryAmount
            +add(OrderLine) : void
            +remove(OrderLine) : void
            +getOrderLines() : Streamable<OrderLine>
            +getOrderedLinesPrice() : MonetaryAmount
            +getDateCreated() : LocalDateTime
            +getId() : OrderIdentifier
            +getOrderStatus() : OrderStatus
            +getTotalPrice() : MonetaryAmount
            +isOpen() : boolean
            +isPaid() : boolean
            +isCompleted() : boolean
            +isCancelled() : boolean
            +complete() : Order
            +cancel() : void
            +getNumberOfLineItems() : int
            +markPaid() : Order
            -assertOrderIsOpen() : void
        }

        class Cart <<Salespoint>>{
            +addItemTo(Order) : Order
            +addOrUpdateItem(Product, long) : CartItem
            +addOrUpdateItem(Product, Quantity) : CartItem+
            +clear() : void
            +createOrderFor(UserAccount) : Order
            +getItem(String) : Optional<CartItem>
            +getPrice() : MonetaryAmount
            +isEmpty() : boolean
            +iterator() : Iterator<CartItem>
            +removeItem(String) : Optional<CartItem>
            +sumUp(Iterable<? extends Priced> priced)
        }

        class CartItem <<Salespoint>>{
            +getID() : String
            +getPrice() : MonetaryAmount
            +getProduct() : Product
            +getProductName() : String
            +getQuantity() : Quantity
            +hashCode() : int
            +sumUp(Iterable<? extends Priced>) : MonetaryAmount
        }

        class OrderLine <<Salespoint>> {
            +getId() : OrderLineIdentifier
            +getPrice() : MonetaryAmount
            +getProductIdentifier() : ProductIdentifier
            +getProductName() : String
            +getQuantity() : Quantity
            +sumUp(Iterable<? extends Priced>) : MonetaryAmount
        }

        class ChargeLine <<Salespoint>> {
            getId() : ChargeLineIdentifier
            sumUp(Iterable<? extends Priced>) : MonetaryAmount
        }

        enum OrderStatus <<Salespoint>>{
            CANCELLED
            COMPLETED
            OPEN
            PAID

            {static} valueOf(String) : OrderStatus
            {static} values() : OrderStatus[]
        }

        interface OrderRepository <T extends Order> <<Salespoint>> {
            +findByDateCreatedBetween(LocalDateTime, LocalDateTime) : Streamable<T>
            +findByOrderStatus(OrderStatus) : Streamable<T>
            +findByUserAccount(UserAccount) : Streamable<T>
            +findByUserAccountAndDateCreatedBetween(UserAccount, LocalDateTime, LocalDateTime) : Streamable<T>
        }
         OrderRepository -up-|> org.springframework.data.repository.CrudRepository: <<binds>>\n <T extends Order, OrderIdentifier>


        Order  - ->  OrderStatus
        Order  - ->  OrderLine
        Order  - -> ChargeLine
        Cart  *- -  CartItem
        Order  o- -  OrderManager
    }

    namespace org.salespointframework.support {
        class ConsoleWritingMailSender <<Salespoint>>{

        }

        class RecordingMailSender <<Salespoint>>{

        }

    }

}




namespace org.salespointframework.context {
        class ApplicationEvent <<Salespoint>>{

        }

    }

rectangle Bioladen {

    namespace bioladen.order {

        class OrderController <<Controller>> {
            -orderRepository : DistributorOrderRepository
            -distributorProductCatalog : DistributorProductCatalog
            -inventoryProductCatalog : InventoryProductCatalog
            -orderManager : OrderManager
            +orders(Model) : String
            +deleteOrder(long) : String
            +completeOrder(long) : String
            +order(Model, String, Integer) : String
            +BestPriceInfo()
            +getInventoryAmount(DistributorProduct) : long
            +smaller<Comparable -> T>(T , T) : T
            +completeOrder(Model, OrderCart, Optional<UserAccount>) : String
            +removeOrder(Model, String, OrderCart) : String
            +addItem(Model, OrderCart, Long, Integer, Optional<DistributorProduct> : String
            +initializeCart() : OrderCart
            }

        class DistributorOrder <<Entity>> {
            - id : long
            - distributor : Distributor
            - userAccount : UserAccount
            - items : List<OrderItem>
            +DistributorOrder(UserAccount, Distributor)
            +addItems(OrderCart, OrderManager)
            +getPrice() : MonetaryAmount
            }

        class OrderCartItem <<Entity>>{
            -id : String
            -price : BigDecimal
            -quantity : BigDecimal
            -product : DistibutorProduct
            +OrderCartItem(String, Quantity, DistributorProduct)
            +getProductName() : String
            +add(Quantity) : OrderCartItem
            }

        class OrderCart <<Entity>>{
            -items : Map <DistributorProduct, OrderCartItem>
            +getPrice() : MonetaryAmount
            +addOrUpdateItem(DistributorProduct, Quantity) : OrderCartItem
            +addOrUpdateItem(DistributorProduct, long) : OrderCartItem
            +addOrUpdateItem(DistributorProduct, double) : OrderCartItem
            +removeItem(String) : Optional<OrderCartItem>
            +getItem(String) : Optional<OrderCartItem>
            +iterator() : Iterator
            +clear()
            }

        class OrderItem <<Entity>>{
            - id : long
            - price : BigDecimal
            - quantity : Quantity
            - product : DistributorProduct
            + OrderItem(Quantity, DistributorProduct)
            }

        class OrderManager <<Service>>{
            -distributorOrderRepository : DistributorOrderRepository
            -orderItemRepository : OrderItemRepository
            +createOrderItem(DistributorProduct, Quantity) : OrderItem
            +delete(DistributorOrder)
            +createOrder(DistributorOrder)
            }

        interface DistributorOrderRepository <<Repository>> extends org.springframework.data.repository.CrudRepository {
        }

        interface OrderItemRepository <<Repository>> extends org.springframework.data.repository.CrudRepository {
        }


        OrderCart "1"  *- - "*" OrderCartItem
        DistributorOrder "1" *- - "*" OrderItem
        OrderController - -> order.html
        OrderController - -> orderfinished.html
        OrderController - -> orderoverview.html
        OrderManager - -> OrderItemRepository
        OrderManager - -> DistributorOrderRepository
        OrderManager "1" - - "*" DistributorOrder
        OrderController o- - OrderManager
        OrderController - -> OrderCart



    }

    namespace bioladen.event {
        class EntityCreatedEvent {

        }

        org.salespointframework.context.ApplicationEvent <|- - bioladen.event.EntityCreatedEvent
    }

    namespace bioladen.product {



        interface DistributorProductCatalog <<Repository>> {

        }



    }

    namespace Amount {
        class Amount {
            +of(long) : Amount

        }

    }

    namespace ressources.templates {

        file order.html <<View>> #limegreen/technology {

        }

        file orderfinished.html <<View>> #limegreen/technology {

        }

        file orderoverview.html <<View>> #limegreen/technology {

                }

    }

}

@enduml

PlantUML version 1.2018.12(Sun Oct 21 12:15:15 CEST 2018)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 9.0.4+11
Operating System: Windows 10
OS Version: 10.0
Default Encoding: Cp1252
Language: de
Country: DE
--></g></svg>