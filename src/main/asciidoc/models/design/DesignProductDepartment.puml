@startuml

!include stylesheet.iuml

rectangle salespoint-framework-7.0.0.RELEASE.jar {

    package org.salespointframework.time {
        interface BusinessTime <<Salespoint>> {

        }
    }

    namespace org.salespointframework.context {
            class ApplicationEvent <<Salespoint>>{

            }

        }

}


rectangle spring-data-comments-2.1.0.RELEASE.jar as spring {

    namespace org.springframework.data.repository {
        interface CrudRepository <T, ID> <<Spring>>{
            <S extends T> +save(S) : S
            <S extends T> +saveAll(Iterable<Sâ€‹>) : Iterable<S>
            +findById(ID) : Optional<T>
            +existsById(ID) : boolean
            +findAll() : Iterable<T>
            +findAllById(Iterable<ID>) : Iterable<T>
            +count() : long
            +deleteById(ID) : void
            +delete(T) : void
            +deleteAll(Iterable<? extends T>) : void
            +deleteAll() : void
        }
    }
}

rectangle Bioladen {

    namespace bioladen.product {

        interface InventoryProductCatalog <<Repository>> extends org.springframework.data.repository.CrudRepository {
            +findAll() : ArrayList<InventoryProduct>
        }

        interface DistributorProductCatalog <<Repository>> extends org.springframework.data.repository.CrudRepository {
            +findAll() : ArrayList<DistributorProduct>
        }

        class DistributorProduct <<Entity>> {
            -distributorProductIdentifier : Long
            -unit : BigDecimal
            -price : BigDecimal
            -distributor : Distributor
            -minimumOrderAmount : long

            +DistributorProduct(String, Distributor, BigDecimal, BigDecimal, long)
        }

        class InventoryProduct <<Entity>> {
            -productIdentifier : Long
            -name : String
            -price : BigDecimal
            -unit : BigDecimal
            -inventoryAmount : long
            -displayedAmount : long
            -distributorProducts : List<DistributorProducts>

            +InventoryProduct(String, DistributorProductCatalog)
            +removeDisplayedAmount(long): boolean
            +toEan13(Long) : long
            +fromEan13(Long) : long
            -getCheckSum(String) : int
        }

        class Distributor <<Entity>> {
            -id : Long
            -name : String
            -email : String
            -contactName : String
            -phoneNr : String

            +Distributor(String, String, String, String)
            +publishDistributorCreatedEvent(Distributor) : void
         }

        


        InventoryProduct  o--  DistributorProduct
        DistributorProduct  --* "1" DistributorProductCatalog
        InventoryProduct --* "1" InventoryProductCatalog


        class InventoryProductController <<Controller>> {
            -inventoryProductCatalog : InventoryProductCatalog
            -distributorProductCatalog : DistributorProductCatalog

            +InventoryProductController(InventoryProductCatalog, DistributorProductCatalog)
            +showProducts() : String
            +addProduct(Long) : String
        }

        class DistributorController <<Controller>> {
            -distributorRepository : DistributorRepository

            +DistributorController(DistributorRepository)
            +showDistributors() : String
            +addDistributor(String, String, String, String) : String
            +removeDistributor(Long) : String
        }

        interface DistributorRepository <<Repository>> {
            +findAll() : ArrayList<Distributor>
        }

        class DistributorProductController <<Controller>> {
            -distributorProductCatalog : DistributorProductCatalog
            -distributorRepository : DistributorRepository

            +DistributorProductController(DistributorProductCatalog. DistributorRepository)
            +showDistributorProducts() : String
            +distributorForm() : String
            +addDistributor(String, Long, String, String, long) : String
        }



        InventoryProductController --> InventoryProduct
        DistributorController --> Distributor
        DistributorProductController --> DistributorProduct

    }


    namespace bioladen.event {
        class EntityCreatedEvent {

        }
        EntityCreatedEvent --|> org.salespointframework.context.ApplicationEvent
    }




    
    namespace ressources.templates {
    
        VIEW(product.html) {

        }

        VIEW(productlist.html) {

        }
        
        VIEW(distributor.html) {
            
        }
        
        VIEW(distributorlist.html) {
        
        }
        
        VIEW(distributorproductlist.html) {
        
        }

        bioladen.product.InventoryProductController --> product.html
        bioladen.product.InventoryProductController --> productlist.html
        bioladen.product.DistributorController --> distributor.html
        bioladen.product.DistributorController --> distributorlist.html
        bioladen.product.DistributorProductController --> distributorproductlist.html

    }





}

bioladen.product.Distributor --> bioladen.event.EntityCreatedEvent
bioladen.product.Distributor "1" *--  bioladen.product.DistributorProduct
bioladen.product.DistributorRepository --|> org.springframework.data.repository.CrudRepository: <<binds>>\n<Distributor, DistributorIdentifier>

@enduml